name: linux-precompile

on:
  push:
    tags:
      - '*-dev'
      - '*-prod'
      - '*-dev-linux'

jobs:
  mix_test:
    runs-on: ubuntu-20.04
    env:
      NIF_VERSION: 0.1.0
    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              arch_name: x86_64
              deb_arch: amd64
              cmake_toolchain_file: ""
          - pair:
              arch_name: aarch64
              deb_arch: arm64
              cmake_toolchain_file: cc_toolchain/linux-aarch64.cmake
          - pair:
              arch_name: armv7l
              deb_arch: armhf
              cmake_toolchain_file: cc_toolchain/linux-armv7l.cmake
          - pair:
              arch_name: ppc64le
              deb_arch: ppc64le
              cmake_toolchain_file: cc_toolchain/linux-ppc64le.cmake
          - pair:
              arch_name: s390x
              deb_arch: s390x
              cmake_toolchain_file: cc_toolchain/linux-s390x.cmake

    steps:
      - uses: actions/checkout@v2

      - uses: erlef/setup-beam@v1
        with:
          otp-version: "24.3"
          elixir-version: "1.13.3"

      - name: Install system dependecies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential automake autoconf pkg-config bc m4 unzip zip curl git libssl-dev gzip libncurses5-dev ca-certificates

      - name: Install system dependecies (aarch64)
        if: ${{ matrix.pair.arch_name == 'aarch64' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Install system dependecies (armv7l)
        if: ${{ matrix.pair.arch_name == 'armv7l' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf

      - name: Install system dependecies (ppc64le)
        if: ${{ matrix.pair.arch_name == 'ppc64le' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-powerpc64le-linux-gnu g++-powerpc64le-linux-gnu

      - name: Install system dependecies (s390x)
        if: ${{ matrix.pair.arch_name == 's390x' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-s390x-linux-gnu g++-s390x-linux-gnu

      - name: Create precompiled library
        run: |
          if [ "${{ matrix.pair.cmake_toolchain_file }}" != "" ]; then
            export CMAKE_TOOLCHAIN_FILE="$(pwd)/${{ matrix.pair.cmake_toolchain_file }}"
          fi
          echo "CMAKE_TOOLCHAIN_FILE: ${CMAKE_TOOLCHAIN_FILE}"
          mix deps.get
          mix compile
          export PKG_NAME=snappy-linux-${{ matrix.pair.arch_name }}-${NIF_VERSION}
          mkdir -p "${PKG_NAME}"
          cp -a _build/dev/lib/snappy/priv "${PKG_NAME}"
          tar -czf "${PKG_NAME}.tar.gz" "${PKG_NAME}"
          rm -rf "${PKG_NAME}"
          ls -lah "${PKG_NAME}.tar.gz"
          mkdir -p artifacts
          mv "${PKG_NAME}.tar.gz" artifacts

      - uses: softprops/action-gh-release@v1
        with:
          tag_name: 0.1.0
          files: artifacts/*.tar.gz
